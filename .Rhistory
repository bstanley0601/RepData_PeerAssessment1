q
q()
x
?
help
where
help
help
swirl()
library(swirl)
swirl()
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char("My","name","is")
my_char <- c("My","name","is")
my_char
paste(mychar, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Brenda")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y,"Z""), sep = "")
paste(c(1:3), c("X","Y,"Z""), sep = "")
paste(1:3, c("X","Y,"Z"), sep = "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
swirl
library(swirl)
swirl()
swirl()
library(data.table)
ihsDT <- fread("idaho_housing_survey.csv", sep=",", header=T, stringsAsFactors=F)
?fread
library(xlsx)
install.packages("xlsx")
library(xlsx)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",desfile="natural_gas_aquisition_program.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="natural_gas_aquisition_program.csv", method="curl")
rm("natural_gas_aquisition_program.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile="NGAP.xlsx", method="curl")
dir()
colIndex <- 7:15
rowIndex <- 18:23
dat <- read.xlsx("NGAP.xlsx", rowIndex=rowIndex, colIndex=colIndex)
dat <- read.xlsx("NGAP.xlsx", rowIndex=rowIndex, colIndex=colIndex, sheetIndex=1)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
read.xlxs("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", SheetIndex=1)
read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", SheetIndex=1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile="restaurants.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile="restaurants.xml", method="curl")
install.packages("XML")
library(XML)
restaurants <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", use Internal=T)
restaurants <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
restaurants <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE, method="curl")
?xmlTreeParse
dir()
cat restaurants.xml
?cat
cat("restaurants.xml")
rm("dat")
rm("ihsDT")
rm("colIndex")
rm("rowIndex")
rm("my_char")
rm("my_name")
rm("num_vect")
rm("tf")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
install.packages("attr")
?Validate
?validate
??validate
?attr
library(attr0)
library(attr)
GET("https://api.github.com/users/jtleek/repos")
??GET
library(jsonlite)
GET("https://api.github.com/users/jtleek/repos")
?GET
??GET
?get
get("https://api.github.com/users/jtleek/repos")
?connect
?Connect
?Connections
?connection
install.packages("httr")
library(httr)
httr("https://api.github.com/users/jtleek/repos")
?GET
GET("https://api.github.com/users/jtleek/repos")
source('~/datasciencecoursera/GettingAndCleaningData/run_analysis.R')
source('~/datasciencecoursera/GettingAndCleaningData/run_analysis.R')
View(meltedData)
View(meansNstds)
View(allCombined)
View(trainData)
View(trainIDs)
View(trainSubject)
View(trainCombined)
data(mtcars)
library(reshape2)
melt(mtcars,id=c("carname","gear","cyl"), measure.vars=c("mpg","hp"))
names(mtcars)
head(mtcars)
str(mtcars)
?names
names(mtcars)[1] <- "carname"
str(mtcars)
str(mtcars)
data(mtcars)
head(mtcars)
names(mtcars)
class(mtcars)
select(mtcars, 1)
mtcars$mpg
mtcars[1,]
mtcars[,1''
mtcars[,1]
names(mtcars)[1]
mtcars$mpg
mtcars$carname <- rownames(mtcars)
names(mtcars)
melt(mtcars,id=c("carname","gear","cyl"), measure.vars=c("mpg","hp"))
carMelt <- melt(mtcars,id=c("carname","gear","cyl"), measure.vars=c("mpg","hp"))
head(carMelt)
tail(carMelt)
dcast(carMelt, cyl~variable)
dcast(carMelt, cyl~variable, mean)
data(InsectSprays)
head(InsectSprays)
tappy(InsectSprays$count, InsectSprays$spray, sum)
tapply(InsectSprays$count, InsectSprays$spray, sum)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
library(dplyr)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
library(plyr)
library(dplyr)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
readRDS("chicago.rds")
?readRDS
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east<-subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west"), col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(lattitude, pm25))
with(pollution, plot(pm25))
with(pollution, plot(latitude, pm25))
with(pollution, plot(latitude, pm25, lwd=2, lty=2))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west<-subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser Data")
title(main="Old Faithful Geyser Data")
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(car$speed), max(car$dist), "SWIRL rules")
text(mean(cars$speed), max(cars$dist), "SWIRL rules")
text(mean(cars$speed),max(cars$dist), "SWIRL rules!")
head(sates)
head(state)
table(state$region)
xyplot(Life.Exp~Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp~Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
rang(airquality$Ozone, na.rm=TRUE)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
dev.off()
table(ariquality$Month)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City") at the command prompt.
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone, main="Ozone and Wind in New York City"))
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality, Month==5)
points(may$wind, may$Ozone)
points(may$Wind, may$Ozone)
points(may$Wind,may$Ozone,col="blue",pch=17)
plot(airquality$Wind, airquality$Ozone, type="n")
points(may$Wind,may$Ozone,col="blue",pch=17)
title(main="Wind and Ozone in NYC")
notmay <- subset(airquality, Mont!=5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend(c(17,8), c("blue","red"), c("May", "Other Months"))
legend("topright",c(17,8), c("blue","red"), c("May", "Other Months"))
?legend
?
help
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), airquality)
xyplot(Ozone~Wind | as.factor(Month), airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month , airquality, layout=c(5,1))
p<-xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(), 10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPallete(c("red","blue"))
p1<-colorRampPallette(c("red","blue"))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<-colorRampPalette(c("blue","green"), alpha=.5)
p3(5)
plot(x, y, pch=19, col=rgb(0,.5,.5))
plot(x, y, pch=19, col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3, "BuGn")
showMe(cols)
pal(colorRampPalette(cols))
pal<-colorRampPalette(cols))
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
summary(BodyWeight)
?xyplot
xyplot(weight ~ Time | Diet, BodyWeight, strip=FALSE)
xyplot(weight ~ Time | Diet, BodyWeight)
?lattice
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
summary(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(airquality)
?qplot
summary(airquality)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, na.rm=TURE)
qplot(Wind, Ozone, data = airquality, na.rm=T)
qplot(Wind, Ozone, data = airquality, FACETS = . ~ factor(Month), na.rm=T)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month), na.rm=T)
qplot(Wind, Ozone, data = airquality, geom="smooth", na.rm=T)
qplot(Wind, Ozone, data = airquality, geom="smooth")
ggplot(movies, aes(votes, rating))
?ggplot
summary(movies)
ggplot(movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
getwd()
setwd("./datasciencecoursera")
dir()
setwd("./RepData_PeerAssessment1")
dir()
stepsByDay<-activityDF %>% filter(complete.cases(activityDF)) %>%
ddply(.(date), summarize, steps=sum(steps))
library(data.table)
library(plyr)
library(dplyr)
stepsByDay<-activityDF %>% filter(complete.cases(activityDF)) %>%
ddply(.(date), summarize, steps=sum(steps))
if(!exists("activityDF")) {
activityDF<-fread("activity.csv")
}
unzip("activity.zip", junkpaths=TRUE, overwrite=TRUE)
activityDF<-fread("activity.csv")
stepsByDay<-activityDF %>% filter(complete.cases(activityDF)) %>%
ddply(.(date), summarize, steps=sum(steps))
library(data.table)
library(dplyr)
?library
main="Total Steps Per Day",
meanSteps<-round(mean(stepsByDay$steps))
medianSteps<-round(median(stepsByDay$steps))
meanSteps
medianSteps
sum(!complete.cases(activityDF))
imp<-transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$steps[match(activityDF$interval)]))
stepsByInterval <- activityDF %>% filter(complete.cases(activityDF)) %>%
ddply(.(interval), summarize, meanSteps=round(mean(steps)))
imp<-transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$meanSteps[match(activityDF$interval)]))
?match
stepsByInterval$meanSteps[match(activityDF$interval, stepsByInterval$interval)]
transform(activityDF, steps=ifelse(!is.na(activityDF$steps), activityDF$steps, stepsByInterval$meanSteps[match(activityDF$interval, stepsByInterval$interval)]))
?transform
newDF <- transform(activityDF, steps=ifelse(!is.na(activityDF$steps), activityDF$steps,
stepsByInterval$meanSteps[match(activityDF$interval,
stepsByInterval$interval)]))
newDF <- transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$meanSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$meanSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
View(imputedDF)
impStepsByDay<-imputedDF %>% ddply(.(date), summarize, steps=sum(steps))
View(impStepsByDay)
View(impStepsByDay)
imputedDF[imputedDf$date=="20120101",]
imputedDF[imputedDF$date=="20120101",]
imputedDF[imputedDF$date=="201210-01",]
imputedDF[imputedDF$date=="2012-10-01",]
sum(imputedDF[imputedDF$date=="2012-10-01",]$steps)
imputedDf[is.na(imputedDF)]
imputedDf[is.na(imputedDF),]
imputedDF[is.na(imputedDF),]
imputedDF[is.na(imputedDF$steps),]
activityDF[is.na(activityDF$steps),]
activityDF[is.na(activityDF$steps),]$steps
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps) & activityDF$date !="2012-10-01", stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps) && activityDF$date !="2012-10-01", stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
activityDF[is.na(activityDF$steps),]$steps
imputedDF[is.na(imputedDF$steps),]$steps <- 0
activityDF[is.na(activityDF$steps),]$steps
is.na(imputedDF)
imputedDF[is.na(imputedDF)]
imputedDF[is.na(imputedDF),]
imputedDF[is.na(imputedDF$steps),]
is.na(imputedDF$steps)
nrows(is.na(imputedDF$steps))
nrow(is.na(imputedDF$steps))
nrow(is.na(activityDF$steps))
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps) && activityDF$date !="2012-10-01", stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
imputedDF[is.na(imputedDF$steps),]$steps <- 0
View(imputedDF)
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps) && activityDF$date !="2012-10-01", stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
View(imputedDF)
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
imputedDF<-transform(imputedDf, steps=ifelse(date="2012-10-01", 0, steps))
View(imputedDF)
View(activityDF)
View(imputedDF)
stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval),]
stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)]
View(stepsByInterval)
View(activityDF)
??sqldf
library(sqldf)
sqldf
?sqldf
View(imputedDF)
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
stepsByInterval<-activityDF %>% filter(complete.cases(activityDF)) %>%
ddply(.(interval), summarize, avgSteps=mean(steps))
imputedDF<-transform(activityDF, steps=ifelse(is.na(activityDF$steps), stepsByInterval$avgSteps[match(activityDF$interval, stepsByInterval$interval)], activityDF$steps))
View(imputedDF)
sum(imputedDF[date=="2012-10-01",]$steps)
sqldf("select * from imputedDF where date = '01-oct-2012' and interval in (select interval from activityDF where date = '01-oct-2012' and steps=NA))
sqldf("select * from imputedDF where date = '01-oct-2012' and interval in (select interval from activityDF where date = '01-oct-2012' and steps=NA"))
sqldf("select * from imputedDF where date = '01-oct-2012' and interval in (select interval from activityDF where date = '01-oct-2012' and steps=NA")
sqldf("select * from imputedDF where date = '01-oct-2012' and interval in (select interval from activityDF where date = '01-oct-2012' and steps is null")
sqlstr<-"select * from imputedDF where date = '01-oct-2012' and interval in (select interval from activityDF where date = '01-oct-2012' and steps is null)"
sqldf(sqlstr)
sqlstr<-"select * from imputedDF where date = '2012-10-01' and interval in (select interval from activityDF where date = '2012-10-01' and steps is null)"
sqldf(sqlstr)
sqlstr<-"select * from imputedDF where  in (select interval from activityDF where date = '2012-10-01' and steps is null)"
sqldf(sqlstr)
sqlstr<-"select sum(steps) from imputedDF where date = '2012-10-01'"
sqldf(sqlstr)
sqlstr<-"update imputedDF set steps = 0 where date = '2012-10-01' and interval in (select interval from activityDF where date = '2012-10-01' and steps is null)"
sqldf(sqlstr)
sqlstr<-"select sum(steps) from imputedDF where date = '2012-10-01'"
sqldf(sqlstr)
sqlstr<-"update imputedDF set steps = 0 where date = '2012-10-01' and interval in (select interval from activityDF where date = '2012-10-01' and steps is null)"
sqldf(sqlstr)
sqlstr<-"select sum(steps) from imputedDF where date = '2012-10-01'"
sqldf(sqlstr)
meanSteps - impMeanSteps
impMeanSteps<-mean(impStepsByDay$steps)
impMedianSteps<-median(impStepsByDay$steps)
meanSteps - impMeanSteps
medianSteps - impMedianSteps
impMeanSteps - meanSteps
impMedianSteps - medianSteps
```
?lubridate
library(lubridate)
install.packages("lubridate")
library(lubridate)
?lubridate
as.date(imputedDF$date)
as.Date(imputedDF$date)
as.Date(imputedDF$date)
??lubridate
as.Date(imputedDF$date)$wday
as.POSIXLT(imputedDF$date)$wday
as.POSIXlt(imputedDF$date)$wday
as.POSIXct(imputedDF$date)$wday
ifelse(as.POSIXLT(imputedDF$date)$wday == c(0,6), 1, 0)
ifelse(as.POSIXLT(imputedDF$date)$wday == c(0,6), 1, 0)
ifelse(as.POSIXlt(imputedDF$date)$wday == c(0,6), 1, 0)
imputedDF$weekend<-ifelse(as.POSIXlt(imputedDF$date)$wday == c(0,6), "WEEKEND",  "WEEKDAY")
qplot(interval, steps, data=stepsByWeekend,
group=weekend, color=weekend, geom=c("point","line"),
xlab="5-minute Interval", ylab="Total Steps",
main="Comparison of Weekend and Weekday Activity")
